spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=/webapp/static/files
spring.servlet.multipart.max-request-size=30MB
spring.servlet.multipart.max-file-size=10MB


spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.datasource.url=jdbc:h2:tcp://localhost/~/test

spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa

#JPA?? DDL? ????? ??? ?? ??? ?????.
spring.jpa.generate-ddl=true

#??? DDL? ??? ??? ?????. ?? ??? value? ??? ????.
# update : schema? ???? ???? ??? ?? ?????.
# create-drop : application ?? ? schema? ???? ?? ? ?????.
# create : application ?? ? ??? schema? ??? ??? ?????.
spring.jpa.hibernate.ddl=create
#update : 변경분만 반영, create : 없애고 다시 넣음

#???? sql? ???? ?? ?? ??? ?????.
spring.jpa.show-sql=true


# 이렇게 설정해주면 localhost:8080/a.html로 접속하면 원래는 static하위의 a.html을 보여줬는데
# 이렇게 설정하면 templates하위에있는 a.html을보여주게된다

#alse로 해놓았을 때 타임리프를 수정하고 서버를 재시작할 필요 없이 새로 고침만으로 반영이 된다.
#(서버 재시작을 안 해도 되어 매우 편리하다!)
#개발할 때는 false로 두고 반영 시에는 true로 설정해놓는 게 좋다.
spring.thymeleaf.cache=false
# 타임리프를 사용하겠다는 뜻
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html